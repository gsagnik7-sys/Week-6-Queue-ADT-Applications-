python -->
from collections import deque

class Solution:
    def rearrangeQueue(self, q):
        n = len(q)
        if n % 2 != 0:
            return  # if size not even, do nothing

        half = n // 2
        first_half = []

        # Step 1: Dequeue first half elements into a list
        for _ in range(half):
            first_half.append(q.popleft())

        # Step 2: Interleave first half with remaining second half
        for i in range(half):
            q.append(first_half[i])   # element from first half
            q.append(q.popleft())     # element from second half

c-->
#include <stdio.h>
#include <stdlib.h>

void rearrangeQueue(int q[], int n) {
    if (n % 2 != 0) return; // if size not even, do nothing

    int half = n / 2;
    int* temp = (int*)malloc(n * sizeof(int));

    int idx = 0;
    for (int i = 0; i < half; i++) {
        temp[idx++] = q[i];          // element from first half
        temp[idx++] = q[i + half];   // element from second half
    }

    // Copy back to original queue
    for (int i = 0; i < n; i++) {
        q[i] = temp[i];
    }

    free(temp);
}
